---
import { comment as commentConfig } from "$/config.yml";
---

{
  commentConfig.enable && (
    <div>
      <div class="flex items-center w-full border-b border-b-gray-300 mt-4 text-skin-base">
        <i class="ri-chat-1-line text-2xl mr-2" />
        最近评论
      </div>
      <div id="waline-recent" class="overflow-hidden" />
      <div class="text-skin-base" id="waline-comment" />
    </div>
  )
}

<script>
  import { comment as commentConfig } from "../config.yml";
  import dayjs from "dayjs";
  import tz from "dayjs/plugin/timezone";
  dayjs.extend(tz);
  dayjs.tz.guess(); // 猜测用户时区
  if (commentConfig.enable) {
    let recentComentUrl =
      commentConfig.serverUrl +
      "/comment?type=recent&count=" +
      commentConfig.count;
    const comment = await fetch(recentComentUrl);
    const recentComments = await comment.json();
    let comments = "<ul>";
    recentComments.forEach((comment, index) => {
      comments +=
        "<li>" +
        (index + 1) +
        "、 " +
        dayjs(comment.insertedAt).format("YYYY-MM-DD HH:mm");
      if (comment.pid) {
        let { href, author, str } = dealComment(comment.comment);
        comments +=
          '<div class="waline-comment-content"><a style="display: block" href=' +
          window.location.origin +
          comment.url +
          ">" +
          str +
          "</a></div>";
      } else {
        comments +=
          '<div class="waline-comment-content"><a style="display: block" href=' +
          window.location.origin +
          comment.url +
          ">" +
          comment.comment +
          "</a></div>";
      }
      comments +=
        '<div class="waline-comment-content-author">' +
        "--" +
        comment.nick +
        "</div></li>";
    });
    comments += "</ul>";
    let commentDiv = document.getElementById("waline-comment");
    commentDiv.innerHTML = comments;
  }

  // 处理评论
  function dealComment(commentStr) {
    let re = /<a[^>]*href=['"]([^\\"]*)['"][^>]*>(.*?)<\/a>/g;
    let arr = [];
    while (re.exec(commentStr) != null) {
      arr.push(RegExp.$1); //如果是RegExp.$1那么匹配的就是href里的属性了!
      arr.push(RegExp.$2);
    }
    if (arr.length > 0) {
      // 说明有匹配到回复
      commentStr = commentStr.replace(/<a[^>](.*?)<\/a>/, arr[1]);
      return {
        href: arr[0],
        author: arr[1],
        str: commentStr,
      };
    }
    return { href: "", author: "", str: "" };
  }
</script>
