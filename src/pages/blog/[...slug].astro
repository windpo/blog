---
import PostFooter from "src/components/PostFooter.astro";
import PostTitle from "src/components/PostTitle.astro";
import Layout from "src/layouts/layout.astro";
import { getCollectionByName } from "src/utils/getCollectionByName";
import { sortPostsByDate } from "src/utils/sortPostsByDate";
export async function getStaticPaths() {
  const posts = await getCollectionByName("blog");
  return posts.map((post) => ({
    params: { slug: post.slug },
    props: post,
  }));
}

const post = Astro.props;
const { Content } = await post.render();

const posts = await getCollectionByName("blog");
const sortPosts = sortPostsByDate(posts);

const currentPostIndex = sortPosts.findIndex(
  (postItem) => postItem.data.title === post.data.title
);
let prevPost: any, nextPost: any;
if (sortPosts[currentPostIndex + 1]) {
  prevPost = sortPosts[currentPostIndex + 1];
}
if (sortPosts[currentPostIndex - 1]) {
  nextPost = sortPosts[currentPostIndex - 1];
}
---

<Layout type="post" activeNav="blog" frontmatter={post.data}>
  <PostTitle
    title={post.data.title}
    date={post.data.date}
    tags={post.data.tags}
    category={post.data.category}
    url={post.url}
    update={post.data.update || ""}
    pageType="post"
  />
  <div class="divider-horizontal"></div>
  <article class="markdown-body scroll-smooth mb-4">
    <Content />
  </article>
  <div class="divider-horizontal"></div>
  <div class="h-8 text-skin-base">
    {
      nextPost ? (
        <a
          class="truncate  w-auto max-w-[40%] float-left"
          href={nextPost.url}
          title={nextPost.data.title}
        >
          <i class="ri-arrow-left-s-fill" />
          {nextPost.data.title}
        </a>
      ) : (
        <div />
      )
    }
    {
      prevPost ? (
        <div class="flex item-center float-right w-auto max-w-[40%] text-right">
          <a class="truncate " href={prevPost.url} title={prevPost.data.title}>
            {prevPost.data.title}
          </a>
          <i class="ri-arrow-right-s-fill float-right" />
        </div>
      ) : (
        <div />
      )
    }
  </div>
  <PostFooter title={post.data.title} date={post.data.date} url={post.url} />
</Layout>
